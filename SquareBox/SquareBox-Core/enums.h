#pragma once
#include <SDL/include/SDL.h>
#include <SDL/include/SDL_mixer.h>
#ifdef SQB_PLATFORM_ANDROID
using namespace std;
//solving for undeclared identifier 'isfinite in b2_math.h, we need a better fix
#endif
#include<Box2D/include/box2d/box2d.h>
#include "macros.h"

namespace SquareBox {

	DEFINE_ENUM_CLASS_WITH_ToString_METHOD(JustificationEnum,
		(LEFT,"LEFT",0)
		(RIGHT,"RIGHT",1)
		(MIDDLE,"MIDDLE",2)
		)

		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(AudioInputFormatEnum,
			(FLAC_FORMAT,"FLAC_FORMAT", MIX_INIT_FLAC)
			(MOD_FORMAT,"MOD_FORMAT", MIX_INIT_MOD)
			(MP3_FORMAT,"MP3_FORMAT", MIX_INIT_MP3)
			(OGG_FORMAT,"OGG_FORMAT", MIX_INIT_OGG)
			(MID_FORMAT,"MID_FORMAT", MIX_INIT_MID)
			(OPUS_FORMAT,"OPUS_FORMAT", MIX_INIT_OPUS)
			)

		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(AudioOutputFormatEnum,
			(U8_AUDIO_OUTPUT,"AUDIO_U8",AUDIO_U8)
			(S8_AUDIO_OUTPUT,"AUDIO_S8", AUDIO_S8)
			(U16_AUDIO_OUTPUT,"AUDIO_U16", AUDIO_U16)
			(S16_AUDIO_OUTPUT,"AUDIO_S16", AUDIO_S16)
			(UNIDENTIFIED_AUDIO_OUTPUT,"UNIDENTIFIED_AUDIO_OUTPUT", -1)
			)

		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(AudioChannlesEnum,
			(MONO,"MONO",1)
			(STEREO,"STEREO",2)
		)
		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(TextureEnum,
			(SINGLE, "SINGLE", 0)
			(TILESHEET, "TILESHEET", 1)
		)
	DEFINE_ENUM_CLASS_WITH_ToString_METHOD(BodyShapeEnum,
		(Box, "Box", 0)
		(Circle, "Circle", 1)
		(Polygon, "Polygon", 2)
		(Edge, "Edge", 3)
		(Chain, "Chain", 4)
		(Capsule, "Capsule", 5)
		(TopCapsule, "TopCapsule", 6)
		(PointLightShape, "PointLightShape",7)
		(CalculatedLightShape, "CalculatedLightShape", 8)
		(TypeCount, "TypeCount", 9)
		(EnumCount, "EnumCount", 10)//this is just there to help us keep track of the nums size
	)

		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(Face,
		(Floor, "Floor", 0)
			(North, "North", 1)
			(East, "East", 2)
			(South, "South", 3)
			(West, "West", 4)
			(Top, "Top", 5)
		)

		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(LayerTypeEnum,
			(FlatLayer, "FlatLayer", 0)
			(TiledLayer, "TiledLayer", 1)
			(IsometricLayer, "IsometricLayer", 2)
		)
		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(FallOffEnum,
		(LINEAR, "LINEAR", 0)
			(LOGARITHMIC, "LOGARITHMIC", 1)
			(REVERSELOG, "REVERSELOG", 2)
			(INVERSE, "INVERSE", 3)
		)
		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(InputDevicesEnum,
		(KeyBoardAndMouse, "KeyBoardAndMouse", 0)
			(GamePad, "GamePad", 1)
			(JoyStick, "JoyStick", 2)
			(TouchScreen, "TouchScreen", 3)
		)

		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(VideoDecorderEnum,
		(Vlc, "Vlc", 0)
			(Ffmpeg, "Ffmpeg", 1)
			(None, "None", 2)
		)

		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(FamilyBitsEnum,
		(Family_a, "Family_a", 1)
			(Family_b, "Family_b", 2)
			(Family_c, "Family_c", 3)
			(Family_d, "Family_d", 4)
			(Family_e, "Family_e", 5)
			(Family_f, "Family_f", 6)
			(Family_g, "Family_g", 7)
			(Family_h, "Family_h", 8)
			(Family_i, "Family_i", 9)
			(Family_j, "Family_j", 10)
			(Family_k, "Family_k", 11)
			(Family_l, "Family_l", 12)
			(Family_m, "Family_m", 13)
			(Family_n, "Family_n", 14)
			(Family_o, "Family_o", 15)
			(Family_p, "Family_p", 16)
		)

		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(MaskBitsEnum,
		(Mask_a, "Mask_a", 1)
			(Mask_b, "Mask_b", 2)
			(Mask_c, "Mask_c", 3)
			(Mask_d, "Mask_d", 4)
			(Mask_e, "Mask_e", 5)
			(Mask_f, "Mask_f", 6)
			(Mask_g, "Mask_g", 7)
			(Mask_h, "Mask_h", 8)
			(Mask_i, "Mask_i", 9)
			(Mask_j, "Mask_j", 10)
			(Mask_k, "Mask_k", 11)
			(Mask_l, "Mask_l", 12)
			(Mask_m, "Mask_m", 13)
			(Mask_n, "Mask_n", 14)
			(Mask_o, "Mask_o", 15)
			(Mask_p, "Mask_p", 16)
		)

		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(ControlledTypeEnum,
		(userControlled, "userControlled", 0)
			(gameControlled, "gameControlled", 1)
			(externalControlled, "externalControlled", 2)
			(freelance, "freelance", 3)
			(EnumCount, "EnumCount", 4)
		)

		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(AnimationTypeEnum,
		(forceDependant, "forceDependant", 0)
			(timeDependant, "timeDependant", 1)
			(propertiesDependant, "propertiesDependant", 2)
		)

		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(JointTypeEnum,
		(distance_joint, "distance_joint", 0)
			(revolute_joint, "revolute_joint", 1)
			(prismatic_joint, "prismatic_joint", 2)
			(pulley_joint, "pulley_joint", 3)
		)
		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(AnimationMotionStateEnum,
		(stationary, "stationary", 0)
			(forward, "forward", 1)
			(backward, "backward", 2)
			(up, "up", 3)
			(down, "down", 4)
		)

		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(BodyTypeEnum,
		(StaticBody, "StaticBody", b2_staticBody)
			(KinematicBody, "KinematicBody", b2_kinematicBody)
			(DynamicBody, "DynamicBody", b2_dynamicBody)
		)
		//TODO implement b2_bullet

		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(MouseEnum,
		(LEFT_CLICK, "LEFT_CLICK", SDL_BUTTON_LEFT)
			(RIGHT_CLICK, "RIGHT_CLICK", SDL_BUTTON_RIGHT)
			(WHEEL_DOWN, "WHEEL_DOWN", SDL_BUTTON_MIDDLE)
		)

		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(TouchScreenEnum,
		(BACK_KEY, "BACK_KEY", SDL_SCANCODE_AC_BACK)
		)

		DEFINE_ENUM_CLASS_WITH_ToString_METHOD(KeyBoardEnum,
		(RETURN, "RETURN", SDLK_RETURN)
			(ESCAPE, "ESCAPE", SDLK_ESCAPE)
			(BACKSAPCE, "BACKSAPCE", SDLK_BACKSPACE)
			(TAB, "TAB", SDLK_TAB)
			(SPACE, "SPACE", SDLK_SPACE)
			(EXCLAIM, "EXCLAIM", SDLK_EXCLAIM)
			(DOUBLEQUOTE, "DOUBLEQUOTE", SDLK_QUOTEDBL)
			(HASH, "HASH", SDLK_HASH)
			(PERCENT, "PERCENT", SDLK_PERCENT)
			(DOLLAR, "DOLLAR", SDLK_DOLLAR)
			(AMPERSAND, "AMPERSAND", SDLK_AMPERSAND)
			(SINGLEQUOTE, "SINGLEQUOTE", SDLK_QUOTE)
			(LEFTPAREN, "LEFTPAREN", SDLK_LEFTPAREN)
			(RIGHTPAREN, "RIGHTPAREN", SDLK_RIGHTPAREN)
			(ASTERISK, "ASTERISK", SDLK_ASTERISK)
			(PLUS, "PLUS", SDLK_PLUS)
			(COMMA, "COMMA", SDLK_COMMA)
			(MINUS, "MINUS", SDLK_MINUS)
			(PERIOD, "PERIOD", SDLK_PERIOD)
			(SLASH, "SLASH", SDLK_SLASH)
			(NUM_0, "NUM_0", SDLK_0)
			(NUM_1, "NUM_1", SDLK_1)
			(NUM_2, "NUM_2", SDLK_2)
			(NUM_3, "NUM_3", SDLK_3)
			(NUM_4, "NUM_4", SDLK_4)
			(NUM_5, "NUM_5", SDLK_5)
			(NUM_6, "NUM_6", SDLK_6)
			(NUM_7, "NUM_7", SDLK_7)
			(NUM_8, "NUM_8", SDLK_8)
			(NUM_9, "NUM_9", SDLK_9)
			(COLON, "COLON", SDLK_COLON)
			(SEMICOLON, "SEMICOLON", SDLK_SEMICOLON)
			(LESS, "LESS", SDLK_LESS)
			(EQULAS, "EQULAS", SDLK_EQUALS)
			(GREATER, "GREATER", SDLK_GREATER)
			(QUESTION, "QUESTION", SDLK_QUESTION)
			(AT, "AT", SDLK_AT)
			(RIGHTBRACKET, "RIGHTBRACKET", SDLK_RIGHTBRACKET)
			(LEFTBRACKET, "LEFTBRACKET", SDLK_LEFTBRACKET)
			(BACKSLASH, "BACKSLASH", SDLK_BACKSLASH)
			(CARET, "CARET", SDLK_CARET)
			(UNDERSCORE, "UNDERSCORE", SDLK_UNDERSCORE)
			(BACKQUOTE, "BACKQUOTE", SDLK_BACKQUOTE)
			(KEY_a, "KEY_a", SDLK_a)
			(KEY_b, "KEY_b", SDLK_b)
			(KEY_c, "KEY_c", SDLK_c)
			(KEY_d, "KEY_d", SDLK_d)
			(KEY_e, "KEY_e", SDLK_e)
			(KEY_f, "KEY_f", SDLK_f)
			(KEY_g, "KEY_g", SDLK_g)
			(KEY_h, "KEY_h", SDLK_h)
			(KEY_i, "KEY_i", SDLK_i)
			(KEY_j, "KEY_j", SDLK_j)
			(KEY_k, "KEY_k", SDLK_k)
			(KEY_l, "KEY_l", SDLK_l)
			(KEY_m, "KEY_m", SDLK_m)
			(KEY_n, "KEY_n", SDLK_n)
			(KEY_o, "KEY_o", SDLK_o)
			(KEY_p, "KEY_p", SDLK_p)
			(KEY_q, "KEY_q", SDLK_q)
			(KEY_r, "KEY_r", SDLK_r)
			(KEY_s, "KEY_s", SDLK_s)
			(KEY_t, "KEY_t", SDLK_t)
			(KEY_u, "KEY_u", SDLK_u)
			(KEY_v, "KEY_v", SDLK_v)
			(KEY_w, "KEY_w", SDLK_w)
			(KEY_x, "KEY_x", SDLK_x)
			(KEY_y, "KEY_y", SDLK_y)
			(KEY_z, "KEY_z", SDLK_z)
			(CAPSLOCK, "CAPSLOCK", SDLK_CAPSLOCK)
			(F1, "F1", SDLK_F1)
			(F2, "F2", SDLK_F2)
			(F3, "F3", SDLK_F3)
			(F4, "F4", SDLK_F4)
			(F5, "F5", SDLK_F5)
			(F6, "F6", SDLK_F6)
			(F7, "F7", SDLK_F7)
			(F8, "F8", SDLK_F8)
			(F9, "F9", SDLK_F9)
			(F10, "F10", SDLK_F10)
			(F11, "F11", SDLK_F11)
			(F12, "F12", SDLK_F12)
			(F13, "F13", SDLK_F13)
			(F14, "F14", SDLK_F14)
			(F15, "F15", SDLK_F15)
			(F16, "F16", SDLK_F16)
			(F17, "F17", SDLK_F17)
			(F18, "F18", SDLK_F18)
			(F19, "F19", SDLK_F19)
			(F20, "F20", SDLK_F20)
			(F21, "F21", SDLK_F21)
			(F22, "F22", SDLK_F22)
			(F23, "F23", SDLK_F23)
			(F24, "F24", SDLK_F24)

			(PRINTSCREEN, "PRINTSCREEN", SDLK_PRINTSCREEN)
			(SCROLLLOCK, "SCROLLLOCK", SDLK_SCROLLLOCK)
			(PAUSE, "PAUSE", SDLK_PAUSE)
			(INSERT, "INSERT", SDLK_INSERT)
			(HOME, "HOME", SDLK_HOME)
			(PAGEUP, "PAGEUP", SDLK_PAGEUP)
			(KEYBOARD_DELETE, "KEYBOARD_DELETE", SDLK_DELETE)
			(END, "END", SDLK_END)
			(PAGEDOWN, "PAGEDOWN", SDLK_PAGEDOWN)
			(ARROW_RIGHT, "ARROW_RIGHT", SDLK_RIGHT)
			(ARROW_LEFT, "ARROW_LEFT", SDLK_LEFT)
			(ARROW_DOWN, "ARROW_DOWN", SDLK_DOWN)
			(ARROW_UP, "ARROW_UP", SDLK_UP)
			(NUMLOCKCLEAR, "NUMLOCKCLEAR", SDLK_NUMLOCKCLEAR)
			(KEYPAD_DIVIDE, "KEYPAD_DIVIDE", SDLK_KP_DIVIDE)
			(KEYPAD_MULTIPLY, "KEYPAD_MULTIPLY", SDLK_KP_MULTIPLY)
			(KEYPAD_MINUS, "KEYPAD_MINUS", SDLK_KP_MINUS)
			(KEYPAD_PLUS, "KEYPAD_PLUS", SDL_SCANCODE_KP_PLUS)
			(KEYPAD_ENTER, "KEYPAD_ENTER", SDLK_KP_ENTER)
			(KEYPAD_PERIOD, "KEYPAD_PERIOD", SDLK_KP_PERIOD)
			(KEYPAD_EQUALS, "KEYPAD_EQUALS", SDLK_KP_EQUALS)
			(KEYPAD_NUM_0, "KEYPAD_NUM_0", SDLK_KP_0)
			(KEYPAD_NUM_1, "KEYPAD_NUM_1", SDLK_KP_1)
			(KEYPAD_NUM_2, "KEYPAD_NUM_2", SDLK_KP_2)
			(KEYPAD_NUM_3, "KEYPAD_NUM_3", SDLK_KP_3)
			(KEYPAD_NUM_4, "KEYPAD_NUM_4", SDLK_KP_4)
			(KEYPAD_NUM_5, "KEYPAD_NUM_5", SDLK_KP_5)
			(KEYPAD_NUM_6, "KEYPAD_NUM_6", SDLK_KP_6)
			(KEYPAD_NUM_7, "KEYPAD_NUM_7", SDLK_KP_7)
			(KEYPAD_NUM_8, "KEYPAD_NUM_8", SDLK_KP_8)
			(KEYPAD_NUM_9, "KEYPAD_NUM_9", SDLK_KP_9)
			(LEFT_CTRL, "LEFT_CTRL", SDLK_LCTRL)
			(LEFT_SHIFT, "LEFT_SHIFT", SDLK_LSHIFT)
			(LEFT_ALT, "LEFT_ALT", SDLK_LALT)
			(LEFT_GUI, "LEFT_GUI", SDLK_LGUI)
			(RIGHT_CTRL, "RIGHT_CTRL", SDLK_RCTRL)
			(RIGHT_SHIFT, "RIGHT_SHIFT", SDLK_RSHIFT)
			(RIGHT_ALT, "RIGHT_ALT", SDLK_RALT)
			(RIGHT_GUI, "RIGHT_GUI", SDLK_RGUI)
		)
}
